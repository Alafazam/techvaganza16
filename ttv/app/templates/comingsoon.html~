{% extends "base.html" %} {% block content %}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/3.0.3/normalize.min.css">
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Open+Sans:600,900">
<link rel="stylesheet" href="http://fonts.googleapis.com/css?family=Lato:300,700,900">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.5/css/materialize.min.css">
<style>
html,
body {
    background: #010A0E;
    position: absolute;
    width: 100%;
    height: 100%;
}

#title {
    position: absolute;
    width: 100%;
    height: 100%;
    /*display: table;*/
}

h1 {
    color: #FFFFFF;
    font-family: Lato;
    font-size: 20px;
    font-weight: 900;
    text-transform: uppercase;
    letter-spacing: 10px;
    margin: 0;
    width: 100%;
    text-align: center;
    position: relative;
    z-index: 20;
    display: table-cell;
    vertical-align: middle;
}

h1 span {
    font-size: 4.5em;
    /*font-size: 100px;*/
    text-shadow: 0 2px 5px rgba(25, 41, 48, 0.1), 0 4px 5px rgba(25, 41, 48, 0.1), 0 6px 5px rgba(25, 41, 48, 0.1), 0 8px 5px rgba(25, 41, 48, 0.1), 0 10px 5px rgba(25, 41, 48, 0.1), 0 12px 5px rgba(25, 41, 48, 0.1), 0 14px 5px rgba(25, 41, 48, 0.1), 0 16px 5px rgba(25, 41, 48, 0.1), 0 18px 5px rgba(25, 41, 48, 0.1), 0 20px 5px rgba(25, 41, 48, 0.1), 0 22px 5px rgba(25, 41, 48, 0.1), 0 24px 5px rgba(25, 41, 48, 0.1), 0 26px 5px rgba(25, 41, 48, 0.1), 0 28px 5px rgba(25, 41, 48, 0.1), 0 30px 5px rgba(25, 41, 48, 0.1);
}

h1 em {
	padding-left: 15px;
    display: block;
    font-family: 'Open Sans';
    font-style: normal;
    letter-spacing: 20px;
    color: #253D47;
    text-shadow: -1px -1px 0 #FFFFFF, 1px -1px 0 #FFFFFF, 1px 1px 0 #FFFFFF, -1px 1px 0 #FFFFFF, 0 2px 5px rgba(25, 41, 48, 0.1), 0 4px 5px rgba(25, 41, 48, 0.1), 0 6px 5px rgba(25, 41, 48, 0.1), 0 8px 5px rgba(25, 41, 48, 0.1), 0 10px 5px rgba(25, 41, 48, 0.1);
}

h1 em::before,
h1 em::after {
	margin-right: 20px;
    content: '';
    display: inline-block;
    width: 160px;
    position: relative;
    top: -4px;
    border: 1px solid #FFFFFF;
    height: 5px;
    box-shadow: 0 2px rgba(25, 41, 48, 0.1), 0 4px rgba(25, 41, 48, 0.1), 0 6px rgba(25, 41, 48, 0.1), 0 8px rgba(25, 41, 48, 0.1), 0 10px rgba(25, 41, 48, 0.1);
}

#layers {
    width: 100%;
    height: 100%;
    position: absolute;
    overflow: hidden;
}

.layer {
    width: 100%;
    height: 100%;
    position: absolute;
    opacity: 0;
    -webkit-animation-name: zoom;
    animation-name: zoom;
    -webkit-animation-duration: 5s;
    animation-duration: 5s;
    -webkit-animation-timing-function: linear;
    animation-timing-function: linear;
    -webkit-animation-iteration-count: infinite;
    animation-iteration-count: infinite;
}

.layer.layer-2 {
    -webkit-animation-delay: 1s;
    animation-delay: 1s;
}

.layer.layer-3 {
    -webkit-animation-delay: 2s;
    animation-delay: 2s;
}

.layer.layer-4 {
    -webkit-animation-delay: 3s;
    animation-delay: 3s;
}

.layer.layer-5 {
    -webkit-animation-delay: 4s;
    animation-delay: 4s;
}

.star {
    width: 11px;
    height: 11px;
    display: inline-block;
    position: absolute;
    fill: #ffffff;
}

.star:nth-child(3n+3) {
    fill: #FEC777;
}

.star:nth-child(5n+5) {
    fill: #498FB3;
}

@-webkit-keyframes zoom {
    0% {
        -webkit-transform: scale(0.1);
        transform: scale(0.1);
        opacity: 0;
    }
    90% {
        opacity: 1;
    }
    100% {
        -webkit-transform: scale(2);
        transform: scale(2);
        opacity: 0;
    }
}

@keyframes zoom {
    0% {
        -webkit-transform: scale(0.1);
        transform: scale(0.1);
        opacity: 0;
    }
    90% {
        opacity: 1;
    }
    100% {
        -webkit-transform: scale(2);
        transform: scale(2);
        opacity: 0;
    }
}

@media only screen and (max-width: 640px) {
    h1 em::before,
    h1 em::after {
        width: 36px;
        position: relative;
        top: -4px;
    }
    h1 em {
        display: block;
        font-family: 'Open Sans';
        font-style: normal;
        letter-spacing: 5px;
        color: #253D47;
    }

    h1 span {
    	font-size: 25px;
	}
}
</style>
<div id="spacer"></div>
<div id="title" class='valign-wrapper'>
    <h1 class='valign'><span class='center-block'>Techvaganza16</span><em>ComingSoon</em></h1><br>
</div>

<div id="layers">
    <div class="layer layer-1"></div>
    <div class="layer layer-2"></div>
    <div class="layer layer-3"></div>
    <div class="layer layer-4"></div>
    <div class="layer layer-5"></div>
</div>
<h5><span style='color:white'><a href='goo.gl/r3PTsK' alt='google form'>Well you might wanna visit this link!</a></span></h5>
<script src='http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js'></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.5/js/materialize.min.js"></script>
<script>
(function($) {
    $(document).ready(function() {
        //TODO : build the markup outside of the DOM then append it
        $('.layer').each(function() {

            var $this = $(this),
                limit = 30,
                $star = [];

            while (limit) {

                $star = $('<span/>').addClass('star');
                $star.html('<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="M10.744,5.372C7.777,5.372,5.372,2.967,5.372,0c0,2.967-2.405,5.372-5.372,5.372c2.967,0,5.372,2.405,5.372,5.372 C5.372,7.777,7.777,5.372,10.744,5.372z"/></svg>');
                $star.css({
                    left: randomInt(1, 100) + '%',
                    top: randomInt(1, 100) + '%',
                    transform: 'scale(' + randomNum(0, 1) + ')',
                    opacity: randomNum(0.6, 1)
                });

                $this.append($star);
                limit--;
            }
        });

    });



    /**
     * Returns random integer
     */
    function randomInt(min, max) {
        return Math.floor((Math.random() * max) + min);
    }
    /**
     * Returns random number
     */
    function randomNum(min, max) {
        return Math.max((Math.random() * max), min).toFixed(1);
    }
})(jQuery);
</script>
<!-- thanks to Marc Newport -->
{% endblock %}
